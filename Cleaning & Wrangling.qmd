---
title: "Cleaning & Wrangling"
author: "Brooke Wainwright"
format: html
editor: visual
---

## Background

These data come from a common garden drought experiment in Davis, California investigating the functional trait strategies of California grassland plants from five different grassland communities spanning California's latitudinal precipitation gradient. There 10-12 species per community or provenance, each provenance has 16 plots (8 drought, 8 control) across 10 shelters (5 drought, 5 control). In 2022-2023, we focused on collecting whole plant traits, including reproductive investment. This study focuses on how these traits relate to reproductive investment depending on drought treatment, native status, or provenance. This document will clean and wrangle the many datasets and images associated with this study.

## Traits & Objectives

-   Reproductive allocation
-   End of Season biomass
-   Relative Growth Rate
-   Photosynthetic Rate
-   Leaf Mass Area
-   Leaf Area
-   WUE Height
-   Leaf Nitrogen
-   Date of first flower
-   Mid season biomass partial
-   Root biomass partial
-   Root:shoot ratio partial
-   Root diameter partial
-   Specific root length partial
-   Root nitrogen partial

Bring in, explore, clean, rectify outliers, organize each trait or group of traits and export as "...\_CLEAN"

## Setup

```{r}
#| message: false
#| warning: false
#| echo: false

library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(viridis)
library(lme4)
```

## Reproductive allocation & End of Season biomass

These data are still being processed in the lab. 

Tasks:
Stats for comparing lines
Bold or dash native/invasive species in giant plot
Jitter points in native or invasive plots
Make populations colors the same
Use viridis scale

Determine outliers for veg mass and flower mass for each species
Remove outliers
Investigate outliers (when we're done)


For now, read in what we have so far and create some preliminary figures and analyses.

```{r}
#| warning: false
## Read in Data
repro <- read_csv("Reproductive Allocation_2023_20250108.csv")
str(repro)
summary(repro)
head(repro)

```

## Clean up and create variables

Remove rows that have NA in the Flower Count row and in the Veg Mass Row. For now, also drop rows that don't have any flower masses. Ultimately this should be a function but slow code it for now.

```{r}
# Figure out how to average flower masses as long as at least Flower_1_g is entered. Come back and do this.

repro_narm <- repro %>% 
  drop_na(Flower_Count) %>% 
  drop_na(Veg_Mass)


plots <- read_csv("Plot_info copy.csv")
str(plots)
summary(plots)
head(plots)

spp <- read_csv("Species Codes copy.csv")
unique(spp$Sp_Code)
unique(repro$Species)

# need to pull out first two characters in string of plant ID to create a "plot" column

repro_narm <- repro_narm %>% 
  mutate(Plot = substr(Plant_ID, start = 1, stop = 2))
unique(repro_narm$Plot)

repro_full <- left_join(repro_narm,plots,by = join_by(Plot))

repro_full$Sp_Code <- repro_full$Species

repro_full <- left_join(repro_full,spp,by = join_by(Sp_Code))

repro_full <- repro_full %>% 
  select(
    Plant_ID,
    Sp_Code,
    Scientific_Name,
    Native_Status,
    Growth_Habit,
    Perenniality,
    Recorder,
    Collection_Date,
    Plot,
    Block,
    Shelter,
    Plot_number,
    Population,
    Treatment,
    Flower_Count,
    Flower_1_g,
    Flower_2_g,
    Flower_3_g,
    Flower_4_g,
    Flower_5_g,
    Flower_6_g,
    Flower_7_g,
    Flower_8_g,
    Flower_9_g,
    Flower_10_g,
    Veg_Mass
  )

# Coerce all AVEBAR from SEDG to be AVEFAT
repro_full$Sp_Code[repro_full$Sp_Code == "AVEBAR" & repro_full$Population == "SEDG"] <- "AVEFAT"

# check your work
repro_full[which(repro_full$Population == "SEDG" & repro_full$Sp_Code == "AVEBAR"),]

repro_full <-
  repro_full %>%
  mutate(fl_average = mean(c(Flower_1_g, 
                             Flower_2_g, 
                             Flower_3_g, 
                             Flower_4_g,
                             Flower_5_g,
                             Flower_6_g,
                             Flower_7_g,
                             Flower_8_g,
                             Flower_9_g,
                             Flower_10_g), na.rm = TRUE))

# check to make sure you have the right columns
repro_full[,16:25]
# Average flower masses for each individual
repro_full$fl_average <- rowMeans(repro_full[,16:25], na.rm = TRUE)

# Find the individuals with no flower mass
no_fls <- repro_full[which(repro_full$fl_average == "NaN"),]
#include everything except fl-Average
no_fls <- no_fls[,1:26]
repro_full <- repro_full[which(repro_full$fl_average != "NaN"),]

avg_fls <- repro_full %>% 
  group_by(Sp_Code, Population, Treatment) %>% 
  summarise(fl_average = mean(fl_average, na.rm = TRUE))

# mast avg fls onto no_fls and then re-merge no-fls with larger dataset
rep_fls <- left_join(no_fls,avg_fls,by=join_by(Sp_Code,Population,Treatment))
repro_fill <- rbind(rep_fls,repro_full)

repro_fill$total_fl_mass <- repro_fill$Flower_Count*repro_fill$fl_average

# There's an entry for ESCCAL which hasn't been done yet -- look into
# Later you can remove any species with only one entry
```
## Find outliers, use ratio of V to R

Come back to this

```{r}
unique(repro_fill$Sp_Code)

summary <- repro_fill %>% 
  group_by(Sp_Code) %>% 
  summarise(n = n()) %>% 
  filter(n < 3)

Sp_List_small <- summary$Sp_Code
hist(repro_fill$Veg_Mass)
```

## Graph Allometry by Species

Here, make a graph with vegetative biomass on the x-axis and reproductive biomass on the y-axis. Have each species be a different color with raw points on the graph, faded in color. Add a line for each species.

Will need to go back and test nad remove outliers

```{r}
ggplot(repro_fill, aes(x = Veg_Mass, y = total_fl_mass, color = Scientific_Name)) +
  geom_point(aes(x = Veg_Mass, y = total_fl_mass, color = Scientific_Name)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "Vegetative Biomass",
       y = "Reproductive Biomass") +
  theme(axis.text.x = element_text(size=9))

# Consider log -scaling to make more digestible

ggsave("Allom_prelim_plot.jpg")
```

## Make everything log scale

```{r}
repro_fill$Veg_Mass_ln <- log(repro_fill$Veg_Mass)
repro_fill$total_fl_mass_ln <- log(repro_fill$total_fl_mass)

# Remove species with less than 3 entries
repro_fill_hi_n <- repro_fill[-(which(repro_fill$Sp_Code %in% c(Sp_List_small))),]
unique(repro_fill_hi_n$Sp_Code)

ggplot(repro_fill_hi_n, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Scientific_Name)) +
  geom_abline(intercept = 0, slope = 1) +
  #geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Species)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9))

# Consider log -scaling to make more digestible

ggsave("Allom_log_plot.jpg")


mod <- lmList(total_fl_mass_ln ~ Veg_Mass_ln | Sp_Code, data = repro_fill_hi_n)

anova(lm(total_fl_mass_ln ~ Veg_Mass_ln*Sp_Code, data = repro_fill_hi_n))

```

## Analysis and Diving Deeper

- Look at Species from different populations
- Compare Native v non-native species
- Compare grasses and forbs
- Use model comparison to detect whether growth habit, native status, or perenniality are the best predictors of reproductive allometry

```{r}
level_order <- c('ANGELO', 'MCL', 'BORR','SEDG','WWP')

repro_AVEBAR <- repro_fill[which(repro_fill$Sp_Code == "AVEBAR"),]

ggplot(repro_AVEBAR, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_AVEBAR.jpg")

anova(lm(total_fl_mass_ln ~ Veg_Mass_ln*Population, data = repro_AVEBAR))


repro_BRODIA <- repro_fill[which(repro_fill$Sp_Code == "BRODIA"),]

ggplot(repro_BRODIA, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_BRODIA.jpg")

anova(lm(total_fl_mass_ln ~ Veg_Mass_ln*Population, data = repro_BRODIA))

repro_BROHOR <- repro_fill[which(repro_fill$Sp_Code == "BROHOR"),]

ggplot(repro_BROHOR, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_BROHOR.jpg")

anova(lm(total_fl_mass_ln ~ Veg_Mass_ln*Population, data = repro_BROHOR))

repro_BROMAD <- repro_fill[which(repro_fill$Sp_Code == "BROMAD"),]

ggplot(repro_BROMAD, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Population)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_BROMAD.jpg")

anova(lm(total_fl_mass_ln ~ Veg_Mass_ln*Population, data = repro_BROMAD))

```

- Compare Native v non-native species
- Compare grasses and forbs
- Use model comparison to detect whether growth habit, native status, or perenniality are the best predictors of reproductive allometry

```{r}
ggplot(repro_fill_hi_n, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Native_Status)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Native_Status)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_Native.jpg")
```

```{r}
ggplot(repro_fill_hi_n, aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Growth_Habit)) +
  geom_abline(intercept = 0, slope = 1) +
  geom_point(aes(x = Veg_Mass_ln, y = total_fl_mass_ln, color = Growth_Habit)) +
  geom_smooth(method = "lm", fill = NA) +
  theme_bw() +
  labs(x = "log(Vegetative Biomass (grams))",
       y = "log(Reproductive Biomass (grams))") +
  theme(axis.text.x = element_text(size=9, angle=45, hjust = 1))

ggsave("Allom_log_plot_Growth.jpg")
```

## Relative Growth Rate

```{r}
rgr <- read_csv("Relative Growth Rate 2023 copy.csv")
str(rgr)
summary(rgr)
head(rgr)

```

## Photosynthetic Rate

```{r}



```

## Leaf Mass Area

## Leaf Area

## WUE

## Height

## Leaf Nitrogen

## Date of first flower

## Mid season biomass partial

## Root biomass partial

## Root:shoot ratio partial

## Root diameter partial

## Specific root length partial

## Root nitrogen partial
